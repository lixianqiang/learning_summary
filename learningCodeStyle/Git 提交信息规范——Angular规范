## Angular提交信息规范
#  提交格式如下：
#    <type>(<scope>，可选): <subject>
#    
#    <body>
# 
#    <footer>
#
#  每次提交可以包含页眉(header)、正文(body)和页脚(footer)
#  每次提交页眉的必需的，正文与页脚是可选的
#  每次提交的信息不超过100个字符
#
#
## 页眉 <type>(<scope>): <subject>
#  只有一行，包括三个字段：提交类型(type，必需)、作用域(scope，可选)、主题(subject，必需)
#  提交类型(type)
#    提交类型指定为下面其中一个： 
#      1，build：对构建系统或者外部依赖项进行了修改
#      2，chore：构建过程或辅助工具的变动
#      3，ci：对CI配置文件或脚本进行了修改
#      4，docs：对文档进行了修改
#      5，feat：增加新的特征
#      6，fix：修复bug
#      7，pref：提高性能的代码更改
#      8，refactor：既不是修复bug也不是添加特征的代码重构
#      9，style：不影响代码含义的修改，比如空格、格式化、缺失的分号等
#      10，test：增加确实的测试或者矫正已存在的测试
#  作用域(scope)
#    范围可以是任何指定提交更改位置的内容，如果没有更合适的范围，则可以使用*
#  主题(subject)
#    主题包括了对本次修改的简洁描述，有以下准则
#      1，使用命令式，现在时态：“改变”不是“已改变”也不是“改变了”
#      2，首字母小写
#      3，不在末尾添加句号
#
#
## 正文 <body>
#  1，使用命令式、现在时态：“改变”不是“已改变”也不是“改变了”
#  2，应该包含修改的动机以及和之前行为的对比
#  
#
## 页脚 <footer>   
#  应包含关于重大变更(Breaking changes)的相关信息，以及Github issue的关闭提交                  
#  应包含以下信息：
#    1，不兼容修改/重大变更(Breaking changes)
#    2，关闭 Github issue(Referencing issues)
#
#  不兼容修改/重大变更(Breaking changes)
#    1，所有的重大变更需要在页脚的‘重大变更区’里提及到，
#       以 'BREAKING CHANGE:' 开头，后跟一个空格或者两个换行符
#    2，其余的信息就是对此次修改的描述，修改的理由和修改注释
#    如下所示：
#      BREAKING CHANGE: isolate scope bindings definition has changed and
#          the inject option for the directive controller injection was removed.
#
#          To migrate the code follow the example below:
#  
#          Before:
#  
#          ......
#          ......
#  
#          After:
#  
#          ......
#          ......
#  
#      The removed `inject` wasn't generaly useful for directives so there should be no code using it.
#
#  关闭 Github issue(Referencing issues)
#    如果本次提交目的是关闭issue的话，需要关闭的issue应在页脚(footer)的单独一行中列出，
#    并以“ Closes”关键字开头，如下所示：
#      Closes #234
#    如果修改了多个bug，以逗号隔开
#      Closes #123, #245, #992
#
#
## 还原/回滚 revert
#  如果当前提交的目的是恢复为先前的提交（取消先前的提交），
#  则应以开头 ’revert:‘，后跟该还原的提交的页眉。
#  在正文中应该说：This reverts commit <hash>.，其中哈希<hash>是要还原的提交的SHA。
#
#  提交格式如下：
#    revert:<type>(<scope>，可选): <subject>
#    
#    This reverts commit 待还原提交的SHA
# 
#  如下所示：
#    revert: feat(pencil): add 'graphiteWidth' option
#
#    This reverts commit 667ecc1654a317a13331b17617d973392f415f02.
#
#
## 实例说明
#
# 
# feat($browser): onUrlChange event (popstate/hashchange/polling)
# 
# Added new event to $browser:
# - forward popstate event if available
# - forward hashchange event if popstate not available
# - do polling when neither popstate nor hashchange available
# 
# Breaks $browser.onHashChange, which was removed (use onUrlChange instead)
# -------------------------------------------------------------------------------------------------------------------------------
# 
# 
# fix($compile): couple of unit tests for IE9
# 
# Older IEs serialize html uppercased, but IE9 does not...
# Would be better to expect case insensitive, unfortunately jasmine does
# not allow to user regexps for throw expectations.
# 
# Closes #392
# Breaks foo.bar api, foo.baz should be used instead
# -------------------------------------------------------------------------------------------------------------------------------
# 
# 
# feat(directive): ng:disabled, ng:checked, ng:multiple, ng:readonly, ng:selected
# 
# New directives for proper binding these attributes in older browsers (IE).
# Added coresponding description, live examples and e2e tests.
# 
# Closes #351
# -------------------------------------------------------------------------------------------------------------------------------
# 
# 
# style($location): add couple of missing semi colons
# -------------------------------------------------------------------------------------------------------------------------------
# 
# 
# docs(guide): updated fixed docs from Google Docs
# 
# Couple of typos fixed:
# - indentation
# - batchLogbatchLog -> batchLog
# - start periodic checking
# - missing brace
# -------------------------------------------------------------------------------------------------------------------------------
# 
# 
# feat($compile): simplify isolate scope bindings
# 
# Changed the isolate scope binding options to:
#   - @attr - attribute binding (including interpolation)
#   - =model - by-directional model binding
#   - &expr - expression execution binding
# 
# This change simplifies the terminology as well as
# number of choices available to the developer. It
# also supports local name aliasing from the parent.
# 
# BREAKING CHANGE: isolate scope bindings definition has changed and
# the inject option for the directive controller injection was removed.
# 
# To migrate the code follow the example below:
# 
# Before:
# 
# scope: {
#   myAttr: 'attribute',
#   myBind: 'bind',
#   myExpression: 'expression',
#   myEval: 'evaluate',
#   myAccessor: 'accessor'
# }
# 
# After:
# 
# scope: {
#   myAttr: '@',
#   myBind: '@',
#   myExpression: '&',
#   // myEval - usually not useful, but in cases where the expression is assignable, you can use '='
#   myAccessor: '=' // in directive's template change myAccessor() to myAccessor
# }
# 
# The removed `inject` wasn't generaly useful for directives so there should be no code using it.
# -------------------------------------------------------------------------------------------------------------------------------
#
#
## 提交模板
# head: <type>(<scope>): <subject>
# - type: feat, fix, docs, style, refactor, test, chore
# - scope: can be empty (eg. if the change is a global or difficult to assign to a single component)
# - subject: start with verb (such as 'change'), 50-character line
#
# body: 72-character wrapped. This should answer:
# * Why was this change necessary?
# * How does it address the problem?
# * Are there any side effects?
#
# footer: 
# - Include a link to the ticket, if any.
# - BREAKING CHANGE

